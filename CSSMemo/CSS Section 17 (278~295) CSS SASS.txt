1. SASS란?
정의 : CSS 전처리기, CSS가 브라우저에 배포되기 전에 VANILA CSS로 변환된다.

=> SCSS는 SASS를 도와주는 기능을 의미한다. (.jsx와 비슷하다.)
SCSS를 사용하지 않으면 SASS만으로 동작하는데 중괄호와 콜론을 사용하면 에러가 나는 것이 기본동작이다.
해당 동작이 불편하여 SCCS를 많이 사용한다.

특징
1-1. CSS 규칙을 중첩해서 코드를 짧게 만들 수 있다.
1-2. 다른 규칙을 상속할 수 있다.
1-3. 헬퍼 함수를 사용하여 원하는 스타일링
1-4. 믹스인을 통해 재사용할 수 있는 코드 조각 생성
1-5. 분할 파일로 코드를 여러 파일로 나눌 수 있다.
1-5. 변수 정의 가능
1-6 //로 주석 설정 가능


2. SASS 설치 및 변환
node를 통해 설치한다. => npm install sass

sass 변환할 파일명.scss 변환 파일명.css
css 파일 하나와 map 파일하나가 만들어진다. map

sass --watch 변환할 파일명.scss:변환 파일명.css
=> scss의 변화를 감지하여 자동 적용한다.


3. 중첩 선택자
=> .document { 
    CODE....

    li (document li) {

    }
}
=> 선택자를 선택하고 css를 작성한 body에서 해당 선택자의 자식을 선택하여 css를 적용시킬 수 있다.
=> 명확하고 가시성 좋은 코드 생성가능


4. 중첩 프로퍼티
flex, font, background 등의 -과 함께 사용하는 파생된 프로퍼티들을 쉽게 표현할 수 있다.
font : {
    size : 4rem;
    weight : bold;
    family : sans-serif
}


5. 변수
정의 : $변수명 : value
=> value는 color 뿐만 아니라 center, 숫자 아무거나 올 수 있다.
=> 변수명만 value로 주는 것이 아니라 $변수명 => 이렇게 $까지 줘야 한다.


6. 변수에 목록 및 맵 저장하기

6-1. 목록 변수
변수에 여러 value를 넣는 것을 의미한다.
$border-default : 0.05rem solid $main-color (변수의 value로 변수가 들어갈 수 있다.)
구분자로 공백과 쉼표(,)를 사용한다.

6-2. map 변수
변수를 체계적으로 관리하는 기능을 의미한다. => 객체와 비슷하다.
$colors : (main : value, secondary : value)
border-color : map-get($colors, main) => map-get이라는 함수를 통해 해당 key의 value를 가져온다.


