1. flex란?
정의 : 요소를 배치하는 프로퍼티 중 하나이다.

특징
1-1. 부모에 display : flex라는 요소를 설정한다. flex-container라고 부른다.
1-2. 하위 요소는 flex-items라고 부른다.
1-3. flex요소가 되면 하위 items들에 대한 요소 배치를 결정할 수 있다.
    이 떄 부모 요소에서 컨트롤할 수 있고 자식 자체가 배치를 결정할 수 도 있다.
1-4. flex-box을 사용하면 margin 상쇄가 일어나지 않을 수 도 있다.


2. flex-direction, flex-wrap
display : flex가 적용되면 flex-direction : row;, flex-wrap : nowrap이 default로 설정된다.

** flex-shrink
=> 부모의 메인 축(넓이, 높이) 보다 자식들의 메인 축이(넓이, 높이) 더 크면 자식 요소들을 자동으로 줄입니다.
=> 기본값은 1입니다. 0으로 설정하면 너비가 줄어들지 않고 부모를 뚫어버립니다.

**  align-items
=> 기본값은 stretch입니다.
=> row일 떄 세로 축, col일 떄 가로 축에 영향을 줍니다.
=> 어떤 영향? : align-items가 stretch일 떄 부모의 h,w을 따라가는 현상입니다. 

dirction : row (nowrap)
1. item의 컨텐츠가 존재하지 않으면 요소가 보이지 않습니다. 즉, width과 컨텐츠가 없다면 보이지 않습니다.
(부모의 width과 관련 없습니다.)
2. item h을 설정하지 않으면 자식 요소가 보이지 않으나 부모에 h을 설정하면 stretch로 부모의 h을 따라갑니다.
(만약 둘 다 없다면 컨텐츠 높이 만큼 따라 갑니다.)
3. 자식의 넓이가 부모의 넓이보다 많다면 자식 넓이들은 부모 넓이에 벗어나지 않으려고 동일하게 줄어듭니다.
(felx-shrink가 1이기 때문입니다.)


dirction : column (nowrap)
1. item이 높이가 없고 컨텐츠도 없다면 보이지 않습니다.
(부모의 h과 관련 없습니다.)
2. item의 width을 설정하지 않으면 부모의 width을 따라갑니다. stretch 속성 떄문입니다.
(만약 둘 다 없다면 컨텐츠 넓이를 따라갑니다. 근데 부모는 block일 떄 100%를 가지는 속성으로 전체를 차지하는 경우가 많습니다.)
3. 자식들의 높이가 부모의 높이보다 높다면 자식 높이들은 부모 높이에 벗어나지 않으려고 동일하게 줄어듭니다.
(flex-shrink 1)


wrap
1. 메인 축 부모의 넓이나 높이를 자식들의 합이 더 커질 떄 자동으로 다음 메인 축으로 자식들이 배치되는 현상입니다.
2. 하지만 shrink가 0가 되는 건 아닙니다.
3. 부모가 900px이고 자식이 300px일 떄 부모가 850px 일 때는 shrink가 동작할 수 있고 더 줄어들면 wrap이 발동합니다.
(3같은 동작은 자동으로 실행됩니다.)


3. 기본 축과 교차 축
flex-direction : row; 
=> 기본축이 왼쪽 상단에서 오른쪽 상단으로 가로/ 교차축이 왼쪽 상단에서 왼쪽 하단으로 세로
flex-direction : row-reverse 
=> 기본축이 오른쪽 상단에서 왼쪽 상단으로 가로/ 교차축이 오른쪽 상단에서 오른쪽 하단으로 세로

flex-direction : column
=> 기본축이 세로(왼쪽 상단에서 왼쪽 하단)/ 교차축이 가로(왼쪽 상단에서 오른쪽 상단)
flex-direciton : column-reverse
=> 기본축이 세로 (왼쪽 하단에서 왼쪽 상단) 가로(왼쪽 하단에서 오른쪽 하단)

기본축 => 요소가 정렬되는 첫 번쨰 기준
교차축 => 요소가 정렬되는 두 번쨰 기준


4. justify-content, align-items
=> 메인 축 정렬과 세로 축 정렬을 의미합니다.
=> align-items을 설정하면 stretch 설정이 사라집니다.








