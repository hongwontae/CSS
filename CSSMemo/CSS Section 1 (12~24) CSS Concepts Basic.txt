1. inline Style
HTML의 tag의 style 속성을 사용하면 된다.
<section style="backgroung : red; color : black"></section>
=> 인라인을 통해 여러개의 css를 적용시키려면 세미콜론( ; )으로 구분하면 된다.

=> 가독성이 떨어지고 강제로 CSS 최우선순위이기 떄문에 권장하지 않는다.


2. <style> 태그 이해하고 .css 파일 생성하기
style 태그 안에서 CSS를 작성할 수 있다. => CSS 파일에서 작성하듯이
=> 단점은 브라우저가 캐시하지 않기에 성능 하락을 일으킬 수 있다.

<link> 태그를 사용하고 .css 파일을 생성하고 rel="stylesheet" href="main.css"를 사용하면
=> 브라우저가 CSS파일을 캐시하기 때문에 성능 이점을 가질 수 있고 HTML 파일과 CSS 파일의 확실한 분리가 이루어져서 무결성을 지킬 수 있다.

=> 최종적으로 Html에 Css를 적용시킬 수 있는 방법은 세 가지이다. 인라인 스타일, <style> 태그, .css+link 태그


3. 글꼴
font-family props이다.
sans-serif, serif, monospace => 브라우저에서 제공하는 폰트이다.

구글 폰트 사용
구글 폰트 페이지 => 원하는 폰트 선택 => get Font => get embed code => link and font-family 가져와서 사용


4. 선택자
classes => 스타일 적용 방법
classes => .className {color : red};

* => * {color : red} => 모든 요소 글씨 빨간색

id => 스타일 적용방법/ 하나만 가능
id => #idName{color : 'blue'};

Attribute => [disabled] {colror : red}
=> disabled가 적용된 모든 요소를 선택한다.

*** css 선택자의 이름은 케밥 표기법을 사용 => 대소문자 구분x, 단어마다 -를 사용


5. Cascade and 명시도
CSS 선택자들의 우선순위 => 명시도
상속 < 속성 < *(전체 선택자) < tagElement < class < id < inline
같은 레벨이라면 밑에 있는 css가 선택된다. => 위에서 아래로 파싱하기 떄문이다.

cascading
여러 스타일이 같은 요소에 적용될 수 있음을 의미하는 말


6. 상속
부모 요소(직접+간접)의 스타일을 상속하는 개념이다.
상속은 항상 명시도 제일 낮다.
통일된 구조를 갖추고 싶을 떄 이 개념을 많이 사용한다.

CSS의 value로 inherit를 사용할 수 있다. => 해당 레벨로 해당 상속을 가져와라

* 파싱방법이 효율적이지 않다. => 사용 지양


7. 결합자 추가하기
여러 선택자를 합쳐서 하나의 CSS 규칙을 만드는 행위

인접 형제 결합자
선택자 + 선택자... => h2+p {...}
h2의 형제면서 바로 뒤에오는 게 p태그면 적용하라

일반 형제 결합자
선택자 ~ 선택자 => h2 ~ p{....}
h2태그 앞에 p 태그가 위치해야 하지만 꼭 첫 번쨰일 필요는 없다.

자식 선택자
선택자 > 선택자 =>div > p{...}
div의 직속 자식일 떄(p) 적용된다.

자손 선택자
선택자 선택자 => div p
div의 직속 자식이거나 간접 자식이거나 상관없이 적용된다.

결합자 < 직접 선택자 => 효율적인 측면에서 직접 선택자가 낫다.

결합자의 우선순위는 위의 우선사항을 따르지만 우선순위가 같다면 구체적인 것을 선택한다. => 결합자가 대부분 선택된다.



























