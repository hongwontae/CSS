1. vertical-align
정의 : inline과 inline-block 요소만 적용되고 가장 큰 요소의 높이를 계상하여 기준으로 삼는다.

특징
1-1. 기준이 되는 문자가 없다면 그 자체로는 의미가 없다.
1-2. top, bottmo, middle을 제외하고는 거의 사용하지 않는다.
1-3. 인라인 요소에 프로퍼티를 부여하고 인라인 요소의 자식이 block이라도 안에 있는 텍스트를 target할 수 있다.


2. text-align
정의 : 인라인 요소(문자)을 세로 정렬시킨다.

특징
2-1. 상속되는 개념이다.
2-2. center => 박스 width의 가운데로 정렬시킨다.


3. box-shadow
정의 : 요소에 그림자를 넣는다.

특징
3-1. box-shadow : 1, 2, 3, 4, 5, 6
1 => offset-x : 양수를 입력하면 그림자가 오른쪽, 음수를 입력하면 그림자가 왼쪽
2 => offset-y : 양수를 입력하면 그림자가 아래, 음수를 입력하면 그림자가 위
3 => blur-radius : 숫자가 커질수록, 그림자가 블러 처리되어 흐려진다.
4 => spread-raduis : 숫자가 커질수록, 그림자의 크기가 커진다.
5 => color : 그림자의 색깔
6 => inset 설정 : inset 키워드를 사용하면 그림자가 요소 안쪽에 생성된다.


4. RGB
정의 : Red, Green, Blue 색상을 0~255 사이의 숫자로 표현한다.
ex) rgb(0,0,0) => 검은색


5. RGBA
정의 : RGB + 색상의 불투명도

특징
5-1. 0은 0% 불투명도, 1은 100% 불투명을 의미한다.


6. border-radius
정의 : border의 모서리의 형태를 변형시킨다.

특징
6-1. 값이 하나라면 모든 모서리에 radius 적용
6-2. 속성 각각 정의 => border-top-left-radius /border-top-right-radius/ border-bottom-right-radius/ border-bottom-left-radius


7. list-style
정의 : <li>의 속성을 제어한다.

특징
7-1. list-style-type: 리스트 마커의 종류를 설정한다. 기본 값은 ‘disc’
7-2. list-style-image: 리스트 마커를 이미지로 설정한다.
7-3. list-style-position: 리스트 마커의 위치를 설정한다. ‘inside’ 또는 ‘outside’ 값을 가질 수 있다.
(list-style : none => li의 모양을 제거한다.)


8. cursor
정의 : 요소에 마우스를 갖다대면 마우스의 모양을 결정짓는 프로퍼티

특징
8-1. value로 pointer를 많이 사용한다. => 마우스의 모양이 손가락 모양이 된다.


9. outline
정의 : border 바깥쪽에 그려지는 선을 의미한다.

특징
9-1. outline-style : 스타일을 지정
9-2. outline-color : 색상을 지정
9-3. outline-width : 굵기를 지정
9-4. outline-offset : outline과 border 사이의 공간을 추가
9-5. outline : 속기법


10. margin : auto
정의 : 여백을 전체를 사용하겠다는 뜻이다. margin-left : auto => 왼쪽의 여백을 전체를 사용하겠다. 요소는 오른쪽에 붙고 왼쪽을 여백으로 채운다.
(상,하는 불가 => 좌,우는 해당 요소가 갖거나, 컨트롤할 값이지만 상,하는 그렇지 않다.)



11. 문자열은 인라인 요소처럼 취급한다. => 인라인 요소의 문자든, 블록 요소의 문자든 문자는 인라인 요소이다.
=> text-align은 문자열만 취급하기에 인라인 요소을 정렬시키는 것이다.


12. CSS 파일 분리
정의 : CSS 파일 하나에 모든 코드가 존재하면 식별하기 어렵기 떄문에 분리한다.

특징
12-1. CSS는 위에서 밑으로 파싱하기 떄문에 우선순위는 밑에 있는 link 태그이다. 덮어쓸 파일을 밑에 둬야 한다.


13. float
정의 : 레이아웃 흐름에서 벗어나 요소를 떠있게 한다. 

특징
13-1. block 요소만 가능
13-2. none(default)/ left : 요소를 문서의 왼쪽에 배치/ right : 요소를 문서에 오른쪽에 배치
13-3. float이 적용된 요소는 문서대열을 이탈하기 때문에 다음에 오는 요소는 기존의 요소가 와야될 자리에 온다. 이 떄 left를 사용해서 겹쳤다면 덮히게 된다. => 문자는 덮히지 않고 알아서 자리를 찾아간다. (float이 이를 위해 만들어졌기 때문)
13-4. float을 사용한 요소 다음부터 문서대열을 지키고 싶다면 요소에 clear:both 사용한다.


14. 명시도 +
.class:hover or .class:active는 id #보다 명시도가 낮기 떄문에 요소의 상태 효과가 미적용될 수 있다.
=> id 선택자:요소 클래스를 덮는 것이 일반적이다.











































