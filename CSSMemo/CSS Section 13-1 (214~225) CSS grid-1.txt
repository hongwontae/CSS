1. 그리드란?
1-1. display : grid를 부모에 설정한다. 부모는 grid-container
1-2. 자식들은 grid-item
1-3. dis-grid가 적용되면 새 행을 만들어서 직속 자식 요소를 넣는다.


2. grid-template-columns
정의 : 열의 넓이를 정의하는 프로퍼티이다.

특징
2-1. 열의 개수만큼 크기를 나열한다.
    (200px, 100px 20%) %는 container or 부모 너비
2-2. fr => 한 개의 % 영역을 의미한다.


3. grid-template-rows
정의 : 각 행의 높이를 정의하는 프로퍼티이다.

특징
3-1. 1rem, 2rem, 3rem => 1행의 높이는 1rem, 2행의 높이는 2rem
3-2. 1개의 값이 하나의 행을 의미한다.


4. 그리드에 자식 요소 배치하기
gird-column-start, grid-column-end을 통해 요소가 차지할 열칸을 규정한다.
(이 떄 밀린 요소를 덮는 것이 아니라 밀어내어 옆이나 밑으로 간다.)
grid-row-start, grid-row-end을 통해 요소가 차지할 행칸을 규정한다.

=> 레이아웃은 컨테이너에서 정의하고 자식 요소에서 배치를 정의한다.


5. element-sizing, repeat, minmax

5-1. grid-template-column/row의 auto
column에 auto는 남은 공간을 전부차지한다.
row에 auto는 나머지 컨테이너 높이, 컨테이너 높이가 없다면 컨텐츠 크기만큼 차지한다.

5-2. repeat
repeat(1,2)
1 => 얼마나 자주 반복할지 
2 => 반복해야 하는 패턴
repeat(4 25%) => 넓이 25% 차지하는 열 4개 생성

5-3. min-max
minmax(1,2)
1 => 최소값
2 => 최대값
그리드 컨테이너의 높이에 따라서 최소값과 최대값 사이의 값이 결정된다.
높이의 최대값을 주었을 떄 컨테이너의 height이 남아있다면 최대값을 준다. 최대값을 주면 부족할 떄는 
최대값과 최소값의 사이값을 계상해서 준다. (넓이도 마찬가지이다.)


6. 고급 요소 배치
grid column, row의 span, -n

span => span은 셀을 의미, span 2는 cell 2개를 의미한다.
행과 열의 숫자가 존재 순차적으로 존재한다. 그리고 역순으로 -1부터 시작하는 줄 number가 존재한다.


7. name-grid
grid-template-rows(column)의 값 앞에 []을 사용해서 각 라인의 번호에 이름을 부여한다.

7-1. [row-1] 100px [row-2] 4rem [row-3] auto
7-2. [row-1 row-11] 5rem => 한 라인에 중복된 이름 설정가능



8. grid-column & grid-row 축약
8-1. grid-column : grid-column-start/grid-column-end
8-2. grid-row : grid-row-start/grid-row-end
8-3. grid-area : grid-row-start/grid-column-start/grid-row-end/grid-column-end


9. Gaps
margin을 준다 해도 각 요소가 배치을 벗어나지 않는다. 영역 내에서 content가 작아지면서 거리를 둬버린다.

헹과 열 사이의 여백 => gaps
9-1. column-gap => 열 사이의 공백을 정의한다.
9-2. row-gap => 행 사이의 공백을 정의한다.
9-3. gap => 행과 열 사이의 공백을 정의한다. gap : row column


10. grid-template-areas/ grid-area
grid-template-areas를 통해 grid-container에 각 셀에 이름을 붙여준다.
col=4/ row=3 => "header header header header"
                "side side main main"
                "footer footer footer footer";

grid-item에서 grid-area의 value로 부모에서 정의한 areas의 이름을 넣는다.
areas의 정의된 영역을 grid-item이 가져간다.

이름을 주고 싶지 않다면 .을 사용하면 된다.







