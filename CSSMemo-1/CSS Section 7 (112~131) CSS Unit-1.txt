1. 프로퍼티별 사용 단위
pixels = px
percentages = % 
root em = rem (폰트)  
em = em (폰트)
viewport height = vh
viewport width = vw

단위를 사용하는 프로퍼티
font-size, padding, border, margin, width, height,
top, bottom, left, right...etc


2. 크기 계산과 단위
Absolute Lengths : px
=> 변하지 않는 값을 의미한다. 사용자가 px를 직접 변경하는 것 외에 변동을 줄 수 없다.

viewport Lengths : vh, vw, vmin, vmax
=> 뷰 포트에 따라서 각 요소의 크기를 조절할 떄 사용
=> 뷰포트에 따라 동적으로 크기가 변한다.

Font-Relative Lengths : rem, em
=> 폰트 크기를 동적으로 표현할 떄 사용

% => 컨테이닝 블록에 대한 이해가 필요하다.
요소에 %를 부여할 떄의 기준점 => Container Block


3. 기억해야 할 규칙 : fixed position과 %
요소가 position : fixed을 받을 떄 컨테이닝 블록은 viewport이다.
=> fixed가 부여된 요소에 width의 100%을 주면 viewport에 의해 넓이가 조정된다.


4. 기억해야 할 규칙 : position:absolute와 %
요소가 postiion : absolute라면 컨테이닝 블록은 Ancestor(조상)이고 
조상의 컨텐츠와 padding을 기준으로 한다. 
=> 단 조상이 position-props을 가져야 한다. 그렇지 않으면 viewport가 기준이다.
=> 조상이 부모를 의미하는 것이다.


5. relative와 static과 %
컨테이닝 블록부모가 된다. 이때는 부모의 컨텐츠만이 %의 기준이다.
=> 가장 가까운 부모가 블락 요소인 컨테이닝 블록
=> 부모의 padding이나 border는 %의 고려요소가 아니다.


6. 높이를 100%로 고정할 떄의 문제점
position이 static이거나 relative일 떄 전체 화면의 backdrop을 위해
height을 잡고 싶다면 html과 body에 100%을 먼저 주고 해당 요소에 100%을 주어야 기능한다.
=> 특수한 상황이다.

position이 fixed나 absolute을 사용하여 backdrop을 구성하는 것이 좋다.
% => viewport을 target하기 떄문이다.


***** margin이 최상단 화면을 차지하고 있다면 fixed, absolute든 그 공간은 제외하고 backdrop이 걸린다.
=> 이때는 left, top 0을 줘서 해결한다.
=> fixed을 사용하는 것이 좋다. => viewport을 따라다니기 떄문이다.








